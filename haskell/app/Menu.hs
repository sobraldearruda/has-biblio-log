{-# LANGUAGE OverloadedStrings #-}

module Menu (
    menu,
    menuUsers,
    menuArchive,
    menuBorrowing,
    backToMenu
) where

import Database (insertItem, getItems, updateItem, deleteItem)
import Database.PostgreSQL.Simple (Connection)
import System.IO (hFlush, stdout)
import Users (postUser, putUser, getOneUser, getAllUsers, deleteUser)
import Archive (postBook, putBook, getOneBook, getAllBooks, deleteBook)
import Borrowing (postBorrowing, putBorrowing, getOneBorrowing, getAllBorrowings, deleteBorrowing)

-- Exibe o menu principal
menu :: Connection -> IO ()
menu connect = do
    putStrLn "\nMENU:"
    putStrLn "1. USU√ÅRIOS"
    putStrLn "2. ACERVO BIBLIOGR√ÅFICO"
    putStrLn "3. EMPR√âSTIMOS DE LIVROS"
    putStrLn "4. SAIR"
    putStr "\nDigite sua escolha: "
    hFlush stdout
    choice <- getLine
    case choice of
        "1" -> menuUsers connect
        "2" -> menuArchive connect
        "3" -> menuBorrowing connect
        "4" -> do
            putStrLn "\nüìö HasBiblioLog üìö"
            return ()
        _   -> putStrLn "\nOp√ß√£o inv√°lida. Tente novamente."

-- Exibe o submenu de op√ß√µes para fun√ß√µes com usu√°rios
menuUsers :: Connection -> IO ()
menuUsers connect = do
    putStrLn "\n1. CADASTRAR USU√ÅRIO"
    putStrLn "2. ATUALIZAR USU√ÅRIO"
    putStrLn "3. VISUALIZAR USU√ÅRIO"
    putStrLn "4. LISTAR USU√ÅRIOS"
    putStrLn "5. REMOVER USU√ÅRIO"
    putStrLn "6. RETORNAR AO MENU"
    putStr "\nDigite sua escolha: "
    hFlush stdout
    choice <- getLine
    case choice of
        "1" -> postUser connect
        "2" -> putUser connect
        "3" -> getOneUser connect
        "4" -> getAllUsers connect
        "5" -> deleteUser connect
        "6" -> backToMenu connect
        "7" -> do
            putStrLn "\nüìö HasBiblioLog üìö"
            return ()
        _   -> putStrLn "\nOp√ß√£o inv√°lida. Tente novamente."

-- Exibe o submenu de op√ß√µes para o acervo bibliogr√°fico
menuArchive :: Connection -> IO ()
menuArchive connect = do
    putStrLn "\n1. CADASTRAR LIVRO"
    putStrLn "2. ATUALIZAR LIVRO"
    putStrLn "3. VISUALIZAR LIVRO"
    putStrLn "4. LISTAR LIVROS"
    putStrLn "5. REMOVER LIVRO"
    putStrLn "6. RETORNAR AO MENU"
    putStr "\nDigite sua escolha: "
    hFlush stdout
    choice <- getLine
    case choice of
        "1" -> postBook connect
        "2" -> putBook connect
        "3" -> getOneBook connect
        "4" -> getAllBooks connect
        "5" -> deleteBook connect
        "6" -> backToMenu connect
        "7" -> do
            putStrLn "\nüìö HasBiblioLog üìö"
            return ()
        _   -> putStrLn "\nOp√ß√£o inv√°lida. Tente novamente."

-- Exibe o submenu de op√ß√µes para empr√©stimos de livros
menuBorrowing :: Connection -> IO ()
menuBorrowing connect = do
    putStrLn "\n1. CADASTRAR EMPR√âSTIMO"
    putStrLn "2. ATUALIZAR EMPR√âSTIMO"
    putStrLn "3. VISUALIZAR EMPR√âSTIMO"
    putStrLn "4. LISTAR EMPR√âSTIMOS"
    putStrLn "5. REMOVER EMPR√âSTIMO"
    putStrLn "6. RETORNAR AO MENU"
    putStr "\nDigite sua escolha: "
    hFlush stdout
    choice <- getLine
    case choice of
        "1" -> postBorrowing connect
        "2" -> putBorrowing connect
        "3" -> getOneBorrowing connect
        "4" -> getAllBorrowings connect
        "5" -> deleteBorrowing connect
        "6" -> backToMenu connect
        "7" -> do
            putStrLn "\nüìö HasBiblioLog üìö"
            return ()
        _   -> putStrLn "\nOp√ß√£o inv√°lida. Tente novamente."

-- Retorna ao menu de op√ß√µes
backToMenu :: Connection -> IO ()
backToMenu connect = do
    menu connect
